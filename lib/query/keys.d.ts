declare namespace Keys {
    const KVSTOREKEYS: {
        MainKVStoreKey: string;
        AccountKVStoreKey: string;
        PostKVStoreKey: string;
        ValidatorKVStoreKey: string;
        GlobalKVStoreKey: string;
        VoteKVStoreKey: string;
        InfraKVStoreKey: string;
        DeveloperKVStoreKey: string;
        ParamKVStoreKey: string;
        ProposalKVStoreKey: string;
    };
    function getHexSubstringAfterKeySeparator(key: string): string;
    function getSubstringAfterKeySeparator(key: string): string;
    function getSubstringAfterSubstore(key: string): string;
    function getValidatorKey(accKey: string): string;
    function getValidatorListKey(): string;
    function getVotePrefix(id: string): string;
    function getVoteKey(proposalID: string, voter: string): string;
    function getDelegationPrefix(me: string): string;
    function getDelegationKey(me: string, myDelegator: string): string;
    function getVoterKey(me: string): string;
    function getDelegateePrefix(me: string): string;
    function getDelegateeKey(me: string, myDelegatee: string): string;
    function getDeveloperKey(accKey: string): string;
    function getDeveloperPrefix(): string;
    function getDeveloperListKey(): string;
    function getInfraProviderKey(accKey: string): string;
    function getInfraProviderListKey(): string;
    function getAccountInfoKey(accKey: string): string;
    function getAccountBankKey(accKey: string): string;
    function getAccountMetaKey(accKey: string): string;
    function getFollowerPrefix(me: string): string;
    function getFollowingPrefix(me: string): string;
    function getFollowerKey(me: string, myFollower: string): string;
    function getFollowingKey(me: string, myFollowing: string): string;
    function getRewardKey(accKey: string): string;
    function getRewardHistoryPrefix(me: string): string;
    function getRewardHistoryKey(me: string, bucketSlot: string): string;
    function getRelationshipPrefix(me: string): string;
    function getRelationshipKey(me: string, other: string): string;
    function getBalanceHistoryPrefix(me: string): string;
    function getBalanceHistoryKey(me: string, bucketSlot: string): string;
    function getGrantPubKeyPrefix(me: string): string;
    function getgrantPubKeyKey(me: string, pubKey: string): string;
    function getPermlink(author: string, postID: string): string;
    function getPostInfoPrefix(me: string): string;
    function getPostInfoKey(permlink: string): string;
    function getPostMetaPrefix(me: string): string;
    function getPostMetaKey(permlink: string): string;
    function getPostReportOrUpvotePrefix(permlink: string): string;
    function getPostReportOrUpvoteKey(permlink: string, user: string): string;
    function getPostViewPrefix(permlink: string): string;
    function getPostViewKey(permlink: string, viewUser: string): string;
    function getPostCommentPrefix(permlink: string): string;
    function getPostCommentKey(permlink: string, commentPermlink: string): string;
    function getPostDonationsPrefix(permlink: string): string;
    function getPostDonationsKey(permlink: string, donateUser: string): string;
    function getProposalKey(proposalID: string): string;
    function getProposalListKey(): string;
    function getNextProposalIDKey(): string;
    function getEvaluateOfContentValueParamKey(): string;
    function getGlobalAllocationParamKey(): string;
    function getInfraInternalAllocationParamKey(): string;
    function getDeveloperParamKey(): string;
    function getVoteParamKey(): string;
    function getValidatorParamKey(): string;
    function getProposalParamKey(): string;
    function getCoinDayParamKey(): string;
    function getBandwidthParamKey(): string;
    function getAccountParamKey(): string;
    function getPostParamKey(): string;
    function getGlobalMetaKey(): string;
    function getInflationPoolKey(): string;
    function getConsumptionMetaKey(): string;
    function getTPSKey(): string;
}
export default Keys;

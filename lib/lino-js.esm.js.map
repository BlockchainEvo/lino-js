{"version":3,"file":"lino-js.esm.js","sources":["../src/transport/encoder.ts","../src/broadcast/index.ts","../src/util/index.ts","../src/query/keys.ts","../src/query/index.ts","../src/transport/rpc.ts","../src/transport/index.ts","../src/lino.ts"],"sourcesContent":["import ByteBuffer from 'bytebuffer';\nimport { encode } from 'punycode';\nimport shajs from 'sha.js';\nimport { Coin } from '../common';\n\n// TODO: for int64, maybe we should do extra check in proper place, or use string\nexport interface StdFee {\n  Amount: number[];\n  Gas: number;\n}\n\nexport interface StdSignature {\n  pub_key: InternalPubKey;\n  signature: InternalPrivKey;\n  sequence: number;\n}\n\nexport interface StdMsg {\n  type: string;\n  value: string;\n}\n\nexport interface StdTx {\n  msg: StdMsg;\n  fee: StdFee;\n  signatures: StdSignature[];\n}\n\nexport interface StdSignMsg {\n  chain_id: string;\n  sequences: number[];\n  fee_bytes: string;\n  msg_bytes: string;\n  alt_bytes: any;\n}\n\nexport interface InternalPubKey {\n  type: string;\n  value: string;\n}\n\nexport interface InternalSignature {\n  type: string;\n  value: string;\n}\n\nexport interface InternalPrivKey {\n  type: string;\n  value: string;\n}\n\n// return a new zero fee object\nexport const getZeroFee: () => StdFee = () => ({\n  Amount: [],\n  Gas: 0\n});\n\nexport function encodeTx(\n  msg: any,\n  msgType: string,\n  rawPubKey: string,\n  rawSigDER: string,\n  seq: number\n): string {\n  const stdMsg: StdMsg = {\n    type: msgType,\n    value: encodeMsg(msg)\n  };\n\n  const stdSig: StdSignature = {\n    pub_key: convertToInternalPubKey(rawPubKey, _TYPE.PubKeySecp256k1),\n    signature: convertToInternalSig(rawSigDER, _TYPE.SignatureKeySecp256k1),\n    sequence: seq\n  };\n\n  const stdTx: StdTx = {\n    msg: stdMsg,\n    signatures: [stdSig],\n    fee: getZeroFee()\n  };\n\n  const jsonStr = JSON.stringify(stdTx);\n  return ByteBuffer.btoa(jsonStr);\n}\n\nexport function encodeMsg(msg: any): any {\n  var encodedMsg = Object.assign({}, msg);\n  if ('new_master_public_key' in msg) {\n    encodedMsg.new_master_public_key = convertToInternalPubKey(\n      msg.new_master_public_key,\n      _TYPE.PubKeySecp256k1\n    );\n  }\n\n  if ('new_post_public_key' in msg) {\n    encodedMsg.new_post_public_key = convertToInternalPubKey(\n      msg.new_post_public_key,\n      _TYPE.PubKeySecp256k1\n    );\n  }\n\n  if ('new_transaction_public_key' in msg) {\n    encodedMsg.new_transaction_public_key = convertToInternalPubKey(\n      msg.new_transaction_public_key,\n      _TYPE.PubKeySecp256k1\n    );\n  }\n\n  if ('validator_public_key' in msg) {\n    encodedMsg.validator_public_key = convertToInternalPubKey(\n      msg.validator_public_key,\n      _TYPE.PubKeyEd25519\n    );\n  }\n\n  return encodedMsg;\n}\nexport function encodeSignMsg(msg: any, chainId: string, seq: number): any {\n  const fee = getZeroFee();\n  const converted = convertMsg(msg);\n  const stdSignMsg: StdSignMsg = {\n    chain_id: chainId,\n    sequences: [seq],\n    fee_bytes: ByteBuffer.btoa(JSON.stringify(fee)),\n    msg_bytes: ByteBuffer.btoa(JSON.stringify(converted)),\n    alt_bytes: null\n  };\n\n  const jsonStr = JSON.stringify(stdSignMsg);\n  const signMsgHash = shajs('sha256')\n    .update(jsonStr)\n    .digest();\n  return signMsgHash;\n}\n\nexport function convertMsg(msg: any): any {\n  var encodedMsg = Object.assign({}, msg);\n  if ('new_master_public_key' in msg) {\n    var buffer = ByteBuffer.fromHex(msg.new_master_public_key);\n    encodedMsg.new_master_public_key = getByteArray(buffer);\n  }\n\n  if ('new_post_public_key' in msg) {\n    var buffer = ByteBuffer.fromHex(msg.new_post_public_key);\n    encodedMsg.new_post_public_key = getByteArray(buffer);\n  }\n\n  if ('new_transaction_public_key' in msg) {\n    var buffer = ByteBuffer.fromHex(msg.new_transaction_public_key);\n    encodedMsg.new_transaction_public_key = getByteArray(buffer);\n  }\n\n  if ('validator_public_key' in msg) {\n    var buffer = ByteBuffer.fromHex(msg.validator_public_key);\n    encodedMsg.validator_public_key = getByteArray(buffer);\n  }\n  return encodedMsg;\n}\n\nfunction getByteArray(buffer: ByteBuffer): number[] {\n  let res: number[] = [];\n  for (var i = 0; i < buffer.limit; ++i) {\n    res.push(buffer.readUint8());\n  }\n  return res;\n}\n\n//decode std key to raw key, only support secp256k1 for now\nexport function decodePrivKey(privKeyHex: string): string {\n  privKeyHex = privKeyHex.toUpperCase();\n  if (privKeyHex.startsWith(_PREFIX.PrefixPrivKeySecp256k1)) {\n    return privKeyHex.slice(_PREFIX.PrefixPrivKeySecp256k1.length);\n  } else if (privKeyHex.startsWith(_PREFIX.PrefixPrivKeyEd25519)) {\n    return privKeyHex.slice(_PREFIX.PrefixPrivKeyEd25519.length);\n  }\n\n  throw new Error(`Decode priv key failed: ${privKeyHex}\\n`);\n}\n\nexport function decodePubKey(pubKeyHex: string): string {\n  pubKeyHex = pubKeyHex.toUpperCase();\n  if (pubKeyHex.startsWith(_PREFIX.PrefixPubKeySecp256k1)) {\n    return pubKeyHex.slice(_PREFIX.PrefixPubKeySecp256k1.length);\n  } else if (pubKeyHex.startsWith(_PREFIX.PrefixPubKeyEd25519)) {\n    return pubKeyHex.slice(_PREFIX.PrefixPubKeyEd25519.length);\n  }\n\n  throw new Error(`Decode pub key failed: ${pubKeyHex}\\n`);\n}\n\n//eoncde raw key to std key, only support secp256k1 for now\nexport function encodePrivKey(privKeyHex: string): string {\n  return _PREFIX.PrefixPrivKeySecp256k1.concat(privKeyHex).toUpperCase();\n}\n\nexport function encodePubKey(pubKeyHex: string): string {\n  return _PREFIX.PrefixPubKeySecp256k1.concat(pubKeyHex).toUpperCase();\n}\n\n// convert raw priv key to internal priv key format\nexport function convertToInternalPrivKey(rawPrivKey: string, type: string): InternalPrivKey {\n  const res: InternalPrivKey = {\n    type: type,\n    value: ByteBuffer.fromHex(rawPrivKey).toString('base64')\n  };\n  return res;\n}\n// convert raw pub key to internal pub key format\nexport function convertToInternalPubKey(rawPubKey: string, type: string): InternalPubKey {\n  const res: InternalPubKey = {\n    type: type,\n    value: ByteBuffer.fromHex(rawPubKey).toString('base64')\n  };\n  return res;\n}\n// convert raw sig to internal sig format\nexport function convertToInternalSig(rawSig: string, type: string): InternalSignature {\n  const res: InternalSignature = {\n    type: type,\n    value: ByteBuffer.fromHex(rawSig).toString('base64')\n  };\n  return res;\n}\n\n// convert internal priv key to raw priv key\nexport function convertToRawPrivKey(internalPrivKey: InternalPrivKey): string {\n  return ByteBuffer.fromBase64(internalPrivKey.value).toString('hex');\n}\n// convert internal pub key to raw pub key\nexport function convertToRawPubKey(internalPubKey: InternalPubKey): string {\n  return ByteBuffer.fromBase64(internalPubKey.value).toString('hex');\n}\n// convert internal sig to raw sig\nexport function convertToRawSig(internalSignature: InternalSignature): string {\n  return ByteBuffer.fromBase64(internalSignature.value).toString('hex');\n}\n\nconst _TYPE = {\n  PubKeyEd25519: 'AC26791624DE60',\n  PubKeySecp256k1: 'F8CCEAEB5AE980',\n\n  PrivKeyEd25519: '954568A3288910',\n  PrivKeySecp256k1: '019E82E1B0F798',\n\n  SignatureKeyEd25519: '6BF5903DA1DB28',\n  SignatureKeySecp256k1: '6D1EA416E1FEE8'\n};\n\nconst _PREFIX = {\n  PrefixPubKeyEd25519: '1624DE6220',\n  PrefixPubKeySecp256k1: 'EB5AE98221',\n\n  PrefixPrivKeyEd25519: 'A328891240',\n  PrefixPrivKeySecp256k1: 'E1B0F79A20'\n};\n","import * as Types from '../common';\nimport { ITransport } from '../transport';\nimport { decodePubKey } from '../transport/encoder';\nimport { ResultBroadcastTxCommit } from '../transport/rpc';\n\nconst InvalidSeqErrCode = 3;\n\nexport default class Broadcast {\n  private _transport: ITransport;\n\n  constructor(transport: ITransport) {\n    this._transport = transport;\n  }\n\n  //account related\n  register(\n    referrer: string,\n    register_fee: string,\n    username: string,\n    masterPubKeyHex: string,\n    postPubKeyHex: string,\n    transactionPubKeyHex: string,\n    referrerPrivKeyHex: string,\n    seq: number\n  ) {\n    const msg: RegisterMsg = {\n      referrer: referrer,\n      register_fee: register_fee,\n      new_username: username,\n      new_master_public_key: decodePubKey(masterPubKeyHex),\n      new_post_public_key: decodePubKey(postPubKeyHex),\n      new_transaction_public_key: decodePubKey(transactionPubKeyHex)\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.RegisterMsgType, referrerPrivKeyHex, seq);\n  }\n\n  transfer(\n    sender: string,\n    receiver: string,\n    amount: string,\n    memo: string,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: TransferMsg = {\n      sender,\n      receiver,\n      amount,\n      memo\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.TransferMsgType, privKeyHex, seq);\n  }\n\n  follow(follower: string, followee: string, privKeyHex: string, seq: number) {\n    const msg: FollowMsg = {\n      follower,\n      followee\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.FollowMsgType, privKeyHex, seq);\n  }\n\n  unfollow(follower: string, followee: string, privKeyHex: string, seq: number) {\n    const msg: UnfollowMsg = {\n      follower,\n      followee\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.UnfollowMsgType, privKeyHex, seq);\n  }\n\n  claim(username: string, privKeyHex: string, seq: number) {\n    const msg: ClaimMsg = {\n      username\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.ClaimMsgType, privKeyHex, seq);\n  }\n\n  updateAccount(username: string, json_meta: string, privKeyHex: string, seq: number) {\n    const msg: UpdateAccountMsg = {\n      username,\n      json_meta\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.UpdateAccountMsgType, privKeyHex, seq);\n  }\n\n  // post related\n  createPost(\n    author: string,\n    postID: string,\n    title: string,\n    content: string,\n    parentAuthor: string,\n    parentPostID: string,\n    sourceAuthor: string,\n    sourcePostID: string,\n    redistributionSplitRate: string,\n    links: Map<string, string>,\n    privKeyHex: string,\n    seq: number\n  ) {\n    let mLinks: Types.IDToURLMapping[] | null = null;\n    if (links != null) {\n      mLinks = [];\n      for (let entry of links.entries()) {\n        const mapping: Types.IDToURLMapping = {\n          identifier: entry[0],\n          url: entry[1]\n        };\n        mLinks.push(mapping);\n      }\n    }\n\n    const msg: CreatePostMsg = {\n      author: author,\n      post_id: postID,\n      title: title,\n      content: content,\n      parent_author: parentAuthor,\n      parent_postID: parentPostID,\n      source_author: sourceAuthor,\n      source_postID: sourcePostID,\n      links: mLinks,\n      redistribution_split_rate: redistributionSplitRate\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.CreatePostMsgType, privKeyHex, seq);\n  }\n\n  like(\n    username: string,\n    author: string,\n    weight: number,\n    post_id: string,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: LikeMsg = {\n      username,\n      weight,\n      author,\n      post_id\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.LikeMsgType, privKeyHex, seq);\n  }\n\n  donate(\n    username: string,\n    author: string,\n    amount: string,\n    post_id: string,\n    from_app: string,\n    from_checking: boolean,\n    memo: string,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: DonateMsg = {\n      username,\n      amount,\n      author,\n      post_id,\n      from_app,\n      from_checking,\n      memo\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.DonateMsgType, privKeyHex, seq);\n  }\n\n  reportOrUpvote(\n    username: string,\n    author: string,\n    post_id: string,\n    is_report: boolean,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ReportOrUpvoteMsg = {\n      username,\n      author,\n      post_id,\n      is_report\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.ReportOrUpvoteMsgType, privKeyHex, seq);\n  }\n\n  deletePost(author: string, post_id: string, privKeyHex: string, seq: number) {\n    const msg: DeletePostMsg = {\n      author,\n      post_id\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.DeletePostMsgType, privKeyHex, seq);\n  }\n\n  view(username: string, author: string, post_id: string, privKeyHex: string, seq: number) {\n    const msg: ViewMsg = {\n      username,\n      author,\n      post_id\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.ViewMsgType, privKeyHex, seq);\n  }\n\n  updatePost(\n    author: string,\n    title: string,\n    post_id: string,\n    content: string,\n    redistribution_split_rate: string,\n    links: Types.IDToURLMapping[],\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: UpdatePostMsg = {\n      author,\n      post_id,\n      title,\n      content,\n      links,\n      redistribution_split_rate\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.UpdatePostMsgType, privKeyHex, seq);\n  }\n\n  // validator related\n  validatorDeposit(\n    username: string,\n    deposit: string,\n    validator_public_key: string,\n    link: string,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ValidatorDepositMsg = {\n      username: username,\n      deposit: deposit,\n      validator_public_key: decodePubKey(validator_public_key),\n      link: link\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.ValidatorDepositMsgType, privKeyHex, seq);\n  }\n\n  validatorWithdraw(username: string, amount: string, privKeyHex: string, seq: number) {\n    const msg: ValidatorWithdrawMsg = {\n      username,\n      amount\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.ValidatorWithdrawMsgType, privKeyHex, seq);\n  }\n\n  ValidatorRevoke(username: string, privKeyHex: string, seq: number) {\n    const msg: ValidatorRevokeMsg = {\n      username\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.ValidatorRevokeMsgType, privKeyHex, seq);\n  }\n\n  // vote related\n  vote(voter: string, proposal_id: string, result: boolean, privKeyHex: string, seq: number) {\n    const msg: VoteMsg = {\n      voter,\n      proposal_id,\n      result\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.VoteMsgType, privKeyHex, seq);\n  }\n\n  voterDeposit(username: string, deposit: string, privKeyHex: string, seq: number) {\n    const msg: VoterDepositMsg = {\n      username,\n      deposit\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.VoterDepositMsgType, privKeyHex, seq);\n  }\n\n  voterWithdraw(username: string, amount: string, privKeyHex: string, seq: number) {\n    const msg: VoterWithdrawMsg = {\n      username,\n      amount\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.VoterWithdrawMsgType, privKeyHex, seq);\n  }\n\n  voterRevoke(username: string, privKeyHex: string, seq: number) {\n    const msg: VoterRevokeMsg = {\n      username\n    };\n    return this._broadcastTransaction(msg, _MSGTYPE.VoterRevokeMsgType, privKeyHex, seq);\n  }\n\n  delegate(delegator: string, voter: string, amount: string, privKeyHex: string, seq: number) {\n    const msg: DelegateMsg = {\n      delegator,\n      voter,\n      amount\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.DelegateMsgType, privKeyHex, seq);\n  }\n\n  delegatorWithdraw(\n    delegator: string,\n    voter: string,\n    amount: string,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: DelegatorWithdrawMsg = {\n      delegator,\n      voter,\n      amount\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.DelegatorWithdrawMsgType, privKeyHex, seq);\n  }\n\n  revokeDelegation(delegator: string, voter: string, privKeyHex: string, seq: number) {\n    const msg: RevokeDelegationMsg = {\n      delegator,\n      voter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.RevokeDelegationMsgType, privKeyHex, seq);\n  }\n\n  // developer related\n  developerRegister(username: string, deposit: string, privKeyHex: string, seq: number) {\n    const msg: DeveloperRegisterMsg = {\n      username,\n      deposit\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.DeveloperRegisterMsgType, privKeyHex, seq);\n  }\n\n  developerRevoke(username: string, privKeyHex: string, seq: number) {\n    const msg: DeveloperRevokeMsg = {\n      username\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.DeveloperRevokeMsgType, privKeyHex, seq);\n  }\n\n  grantDeveloper(\n    username: string,\n    authenticate_app: string,\n    validity_period: number,\n    grant_level: number,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: GrantDeveloperMsg = {\n      username,\n      authenticate_app,\n      validity_period,\n      grant_level\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.GrantDeveloperMsgType, privKeyHex, seq);\n  }\n\n  // infra related\n  providerReport(username: string, usage: number, privKeyHex: string, seq: number) {\n    const msg: ProviderReportMsg = {\n      username,\n      usage\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ProviderReportMsgType, privKeyHex, seq);\n  }\n\n  // proposal related\n  changeGlobalAllocationParam(\n    creator: string,\n    parameter: Types.GlobalAllocationParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeGlobalAllocationParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(\n      msg,\n      _MSGTYPE.ChangeGlobalAllocationParamMsgType,\n      privKeyHex,\n      seq\n    );\n  }\n\n  changeEvaluateOfContentValueParam(\n    creator: string,\n    parameter: Types.EvaluateOfContentValueParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeEvaluateOfContentValueParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(\n      msg,\n      _MSGTYPE.ChangeEvaluateOfContentValueParamMsgType,\n      privKeyHex,\n      seq\n    );\n  }\n\n  changeInfraInternalAllocationParam(\n    creator: string,\n    parameter: Types.InfraInternalAllocationParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeInfraInternalAllocationParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(\n      msg,\n      _MSGTYPE.ChangeInfraInternalAllocationParamMsgType,\n      privKeyHex,\n      seq\n    );\n  }\n\n  changeVoteParam(creator: string, parameter: Types.VoteParam, privKeyHex: string, seq: number) {\n    const msg: ChangeVoteParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeVoteParamMsgType, privKeyHex, seq);\n  }\n\n  changeProposalParam(\n    creator: string,\n    parameter: Types.ProposalParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeProposalParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeProposalParamMsgType, privKeyHex, seq);\n  }\n\n  changeDeveloperParam(\n    creator: string,\n    parameter: Types.DeveloperParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeDeveloperParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeDeveloperParamMsgType, privKeyHex, seq);\n  }\n\n  changeValidatorParam(\n    creator: string,\n    parameter: Types.ValidatorParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeValidatorParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeValidatorParamMsgType, privKeyHex, seq);\n  }\n\n  changeCoinDayParam(\n    creator: string,\n    parameter: Types.CoinDayParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeCoinDayParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeCoinDayParamMsgType, privKeyHex, seq);\n  }\n\n  changeBandwidthParam(\n    creator: string,\n    parameter: Types.BandwidthParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeBandwidthParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeBandwidthParamMsgType, privKeyHex, seq);\n  }\n\n  changeAccountParam(\n    creator: string,\n    parameter: Types.AccountParam,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const msg: ChangeAccountParamMsg = {\n      creator,\n      parameter\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.ChangeAccountParamMsgType, privKeyHex, seq);\n  }\n\n  deletePostContent(\n    creator: string,\n    postAuthor: string,\n    postID: string,\n    privKeyHex: string,\n    seq: number\n  ) {\n    const permLink = postAuthor.concat('#').concat(postID);\n    const msg: DeletePostContentMsg = {\n      creator,\n      permLink\n    };\n\n    return this._broadcastTransaction(msg, _MSGTYPE.DeletePostContentMsgType, privKeyHex, seq);\n  }\n  _broadcastTransaction(\n    msg: any,\n    msgType: string,\n    privKeyHex: string,\n    seq: number\n  ): Promise<ResultBroadcastTxCommit> {\n    return this._transport.signBuildBroadcast(msg, msgType, privKeyHex, seq);\n  }\n}\n\n// Account related messages\nexport interface RegisterMsg {\n  referrer: string;\n  register_fee: string;\n  new_username: string;\n  new_master_public_key: string;\n  new_post_public_key: string;\n  new_transaction_public_key: string;\n}\n\nexport interface TransferMsg {\n  sender: string;\n  receiver: string;\n  amount: string;\n  memo: string;\n}\n\nexport interface FollowMsg {\n  follower: string;\n  followee: string;\n}\n\nexport interface UnfollowMsg {\n  follower: string;\n  followee: string;\n}\n\nexport interface ClaimMsg {\n  username: string;\n}\n\nexport interface RecoverMsg {\n  username: string;\n  new_post_public_key: string;\n  new_transaction_public_key: string;\n}\n\nexport interface UpdateAccountMsg {\n  username: string;\n  json_meta: string;\n}\n\n// post related messages\nexport interface CreatePostMsg {\n  author: string;\n  post_id: string;\n  title: string;\n  content: string;\n  parent_author: string;\n  parent_postID: string;\n  source_author: string;\n  source_postID: string;\n  links: Types.IDToURLMapping[] | null;\n  redistribution_split_rate: string;\n}\n\nexport interface LikeMsg {\n  username: string;\n  weight: number;\n  author: string;\n  post_id: string;\n}\n\nexport interface DonateMsg {\n  username: string;\n  amount: string;\n  author: string;\n  post_id: string;\n  from_app: string;\n  from_checking: boolean;\n  memo: string;\n}\n\nexport interface ReportOrUpvoteMsg {\n  username: string;\n  author: string;\n  post_id: string;\n  is_report: boolean;\n}\n\nexport interface DeletePostMsg {\n  author: string;\n  post_id: string;\n}\n\nexport interface ViewMsg {\n  username: string;\n  author: string;\n  post_id: string;\n}\n\nexport interface UpdatePostMsg {\n  author: string;\n  post_id: string;\n  title: string;\n  content: string;\n  links: Types.IDToURLMapping[];\n  redistribution_split_rate: string;\n}\n\n// validator related messages\nexport interface ValidatorDepositMsg {\n  username: string;\n  deposit: string;\n  validator_public_key: string;\n  link: string;\n}\n\nexport interface ValidatorWithdrawMsg {\n  username: string;\n  amount: string;\n}\n\nexport interface ValidatorRevokeMsg {\n  username: string;\n}\n\n// vote related messages\nexport interface VoterDepositMsg {\n  username: string;\n  deposit: string;\n}\n\nexport interface VoteMsg {\n  voter: string;\n  proposal_id: string;\n  result: boolean;\n}\n\nexport interface VoterWithdrawMsg {\n  username: string;\n  amount: string;\n}\n\nexport interface VoterRevokeMsg {\n  username: string;\n}\n\nexport interface DelegateMsg {\n  delegator: string;\n  voter: string;\n  amount: string;\n}\n\nexport interface DelegatorWithdrawMsg {\n  delegator: string;\n  voter: string;\n  amount: string;\n}\n\nexport interface RevokeDelegationMsg {\n  delegator: string;\n  voter: string;\n}\n\n// developer related messages\nexport interface DeveloperRegisterMsg {\n  username: string;\n  deposit: string;\n}\n\nexport interface DeveloperRevokeMsg {\n  username: string;\n}\n\nexport interface GrantDeveloperMsg {\n  username: string;\n  authenticate_app: string;\n  validity_period: number;\n  grant_level: number;\n}\n\n// infra related messages\nexport interface ProviderReportMsg {\n  username: string;\n  usage: number;\n}\n\n// proposal related messages\nexport interface DeletePostContentMsg {\n  creator: string;\n  permLink: string;\n}\n\nexport interface ChangeGlobalAllocationParamMsg {\n  creator: string;\n  parameter: Types.GlobalAllocationParam;\n}\n\nexport interface ChangeEvaluateOfContentValueParamMsg {\n  creator: string;\n  parameter: Types.EvaluateOfContentValueParam;\n}\n\nexport interface ChangeInfraInternalAllocationParamMsg {\n  creator: string;\n  parameter: Types.InfraInternalAllocationParam;\n}\n\nexport interface ChangeVoteParamMsg {\n  creator: string;\n  parameter: Types.VoteParam;\n}\n\nexport interface ChangeProposalParamMsg {\n  creator: string;\n  parameter: Types.ProposalParam;\n}\n\nexport interface ChangeDeveloperParamMsg {\n  creator: string;\n  parameter: Types.DeveloperParam;\n}\n\nexport interface ChangeValidatorParamMsg {\n  creator: string;\n  parameter: Types.ValidatorParam;\n}\n\nexport interface ChangeCoinDayParamMsg {\n  creator: string;\n  parameter: Types.CoinDayParam;\n}\n\nexport interface ChangeBandwidthParamMsg {\n  creator: string;\n  parameter: Types.BandwidthParam;\n}\n\nexport interface ChangeAccountParamMsg {\n  creator: string;\n  parameter: Types.AccountParam;\n}\n\nconst _MSGTYPE = {\n  RegisterMsgType: '87780FA5DE6848',\n  TransferMsgType: '27F576CAFBB260',\n  FollowMsgType: 'A3CE0B6106CDB0',\n  UnfollowMsgType: '84F010638F0200',\n  ClaimMsgType: 'DD1B3C312CF7D8',\n  RecoverMsgType: 'EC3915F542E0F8',\n  UpdateAccountMsgType: '688B831F24C188',\n\n  CreatePostMsgType: '72231043BC1800',\n  LikeMsgType: 'CAB2644828BCC0',\n  DonateMsgType: '9B3E2278234D08',\n  ReportOrUpvoteMsgType: '768472FB2FC620',\n  DeletePostMsgType: '3479D4D590AC68',\n  ViewMsgType: '2BCB43CBC8F6B0',\n  UpdatePostMsgType: 'CD493C6F19B7B0',\n\n  ValidatorDepositMsgType: '917127FC7429D8',\n  ValidatorWithdrawMsgType: '32E51EDD228920',\n  ValidatorRevokeMsgType: '0E2B2E4A3441E0',\n\n  VoteMsgType: 'AB274474A6AA80',\n  VoterDepositMsgType: '9E6F93EDF45140',\n  VoterWithdrawMsgType: '68E1FB898955A0',\n  VoterRevokeMsgType: 'D8C93E26BD1E58',\n  DelegateMsgType: '6F216E33C5CF98',\n  DelegatorWithdrawMsgType: 'A77E9D3A6EA3D8',\n  RevokeDelegationMsgType: 'C4D544FE5C83B0',\n\n  DeveloperRegisterMsgType: '4A2EC4E5253D78',\n  DeveloperRevokeMsgType: '94C5F456C3BAF8',\n  GrantDeveloperMsgType: '1CF286AA038278',\n\n  ProviderReportMsgType: '108D925A05BE70',\n\n  DeletePostContentMsgType: '7E63F5F154D2C8',\n  ChangeGlobalAllocationParamMsgType: 'A9F46C097B5F50',\n  ChangeEvaluateOfContentValueParamMsgType: '8A59091B1DCEF0',\n  ChangeInfraInternalAllocationParamMsgType: 'D7296C8C03B1C8',\n  ChangeVoteParamMsgType: 'DE608FB7F2ACF8',\n  ChangeProposalParamMsgType: '4293B70D3658F0',\n  ChangeDeveloperParamMsgType: 'E9222357A97CE0',\n  ChangeValidatorParamMsgType: '2E975DC3A10710',\n  ChangeCoinDayParamMsgType: 'FDFDD1B911C0F0',\n  ChangeBandwidthParamMsgType: '6425F4408B8C48',\n  ChangeAccountParamMsgType: '1FED1384B17F40'\n};\n","import { ec as EC } from 'elliptic';\nimport shajs from 'sha.js';\nimport { decodePrivKey, decodePubKey, encodePrivKey, encodePubKey } from '../transport/encoder';\n\nexport function genPrivKeyHex(): string {\n  const ec = new EC('secp256k1');\n  const rawKey = ec.genKeyPair().getPrivate('hex');\n  return encodePrivKey(rawKey);\n}\n\nexport function pubKeyFromPrivate(privKeyHex: string): string {\n  var ec = new EC('secp256k1');\n  var key = ec.keyFromPrivate(decodePrivKey(privKeyHex), 'hex');\n  const rawKey = key.getPublic(true, 'hex');\n  return encodePubKey(rawKey);\n}\n\nexport function isValidUsername(username: string): boolean {\n  const reg = /^[a-z0-9]([a-z0-9_-]){2,20}$/;\n  const match = reg.exec(username);\n  return match != null;\n}\n\nexport function isKeyMatch(privKeyHex: string, pubKeyHex: string): boolean {\n  const ec = new EC('secp256k1');\n  var key = ec.keyFromPrivate(decodePrivKey(privKeyHex), 'hex');\n  return key.getPublic(true, 'hex').toUpperCase() == decodePubKey(pubKeyHex);\n}\n\n// deterministically generates new priv-key bytes from provided key.\nexport function derivePrivKey(privKeyHex): string {\n  const ec = new EC('secp256k1');\n  const keyHash = shajs('sha256')\n    .update(privKeyHex)\n    .digest();\n  var key = ec.genKeyPair({ entropy: keyHash });\n  return encodePrivKey(key.getPrivate('hex'));\n}\n","//@ts-ignore\nimport ByteBuffer from 'bytebuffer';\n\nnamespace Keys {\n  export const KVSTOREKEYS = {\n    MainKVStoreKey: 'main',\n    AccountKVStoreKey: 'account',\n    PostKVStoreKey: 'post',\n    ValidatorKVStoreKey: 'validator',\n    GlobalKVStoreKey: 'global',\n    VoteKVStoreKey: 'vote',\n    InfraKVStoreKey: 'infra',\n    DeveloperKVStoreKey: 'developer',\n    ParamKVStoreKey: 'param',\n    ProposalKVStoreKey: 'proposal'\n  };\n  const _KEYS = {\n    validatorListSubstore: '01',\n    validatorSubstore: '00',\n\n    delegatorSubstore: '00',\n    voterSubstore: '01',\n    voteSubstore: '02',\n    referenceListSubStore: '03',\n\n    proposalSubstore: '00',\n    proposalListSubStore: '01',\n\n    developerSubstore: '00',\n    developerListSubstore: '01',\n\n    infraProviderSubstore: '00',\n    infraProviderListSubstore: '01',\n\n    accountInfoSubstore: '00',\n    accountBankSubstore: '01',\n    accountMetaSubstore: '02',\n    accountFollowerSubstore: '03',\n    accountFollowingSubstore: '04',\n    accountRewardSubstore: '05',\n    accountPendingStakeQueueSubstore: '06',\n    accountRelationshipSubstore: '07',\n    accountGrantListSubstore: '08',\n    accountBalanceHistorySubstore: '09',\n\n    postInfoSubStore: '00',\n    postMetaSubStore: '01',\n    postLikeSubStore: '02',\n    postReportOrUpvoteSubStore: '03',\n    postCommentSubStore: '04',\n    postViewsSubStore: '05',\n    postDonationsSubStore: '06',\n\n    allocationParamSubStore: '00',\n    infraInternalAllocationParamSubStore: '01',\n    evaluateOfContentValueParamSubStore: '02',\n    developerParamSubStore: '03',\n    voteParamSubStore: '04',\n    proposalParamSubStore: '05',\n    validatorParamSubStore: '06',\n    coinDayParamSubStore: '07',\n    bandwidthParamSubStore: '08',\n    accountParamSubstore: '09',\n\n    sep: ByteBuffer.fromUTF8('/').toHex()\n  };\n\n  // validator related\n  export function getValidatorListKey(): string {\n    return _KEYS.validatorListSubstore;\n  }\n\n  export function getValidatorKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.validatorSubstore.concat(accKeyHex);\n  }\n\n  // vote related\n  export function getVotePrefix(id: string): string {\n    const idHex = ByteBuffer.fromUTF8(id).toHex();\n    return _KEYS.voteSubstore.concat(idHex).concat(_KEYS.sep);\n  }\n\n  export function getVoteKey(proposalID: string, voter: string): string {\n    const voterHex = ByteBuffer.fromUTF8(voter).toHex();\n    return getVotePrefix(proposalID).concat(voterHex);\n  }\n\n  export function getDelegatorPrefix(me: string): string {\n    const meHex = ByteBuffer.fromUTF8(me).toHex();\n    return _KEYS.delegatorSubstore.concat(meHex).concat(_KEYS.sep);\n  }\n\n  export function getDelegationKey(me: string, myDelegator: string): string {\n    const myDelegatorHex = ByteBuffer.fromUTF8(myDelegator).toHex();\n    return getDelegatorPrefix(me).concat(myDelegatorHex);\n  }\n\n  export function getVoterKey(me: string): string {\n    const meHex = ByteBuffer.fromUTF8(me).toHex();\n    return _KEYS.voterSubstore.concat(meHex);\n  }\n\n  // developer related\n  export function getDeveloperKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.developerSubstore.concat(accKeyHex);\n  }\n\n  export function getDeveloperListKey(): string {\n    return _KEYS.developerListSubstore;\n  }\n\n  // infra related\n  export function getInfraProviderKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.infraProviderSubstore.concat(accKeyHex);\n  }\n\n  export function getInfraProviderListKey(): string {\n    return _KEYS.infraProviderListSubstore;\n  }\n\n  // account related\n  export function getAccountInfoKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.accountInfoSubstore.concat(accKeyHex);\n  }\n\n  export function getAccountBankKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.accountBankSubstore.concat(accKeyHex);\n  }\n\n  export function getAccountMetaKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.accountMetaSubstore.concat(accKeyHex);\n  }\n\n  export function getGrantKeyListKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.accountGrantListSubstore.concat(accKeyHex);\n  }\n\n  export function getRewardKey(accKey: string): string {\n    const accKeyHex = ByteBuffer.fromUTF8(accKey).toHex();\n    return _KEYS.accountRewardSubstore.concat(accKeyHex);\n  }\n\n  export function getRelationshipPrefix(me: string): string {\n    const meHex = ByteBuffer.fromUTF8(me).toHex();\n    return _KEYS.accountRelationshipSubstore.concat(meHex).concat(_KEYS.sep);\n  }\n\n  export function getRelationshipKey(me: string, other: string): string {\n    const otherHex = ByteBuffer.fromUTF8(other).toHex();\n    return getRelationshipPrefix(me).concat(otherHex);\n  }\n\n  export function getFollowerPrefix(me: string): string {\n    const meHex = ByteBuffer.fromUTF8(me).toHex();\n    return _KEYS.accountFollowerSubstore.concat(meHex).concat(_KEYS.sep);\n  }\n\n  export function getFollowingPrefix(me: string): string {\n    const meHex = ByteBuffer.fromUTF8(me).toHex();\n    return _KEYS.accountFollowingSubstore.concat(meHex).concat(_KEYS.sep);\n  }\n\n  export function getFollowerKey(me: string, myFollower: string): string {\n    const myFollowerHex = ByteBuffer.fromUTF8(myFollower).toHex();\n    return getFollowerPrefix(me).concat(myFollowerHex);\n  }\n\n  export function getFollowingKey(me: string, myFollowing: string): string {\n    const myFollowingHex = ByteBuffer.fromUTF8(myFollowing).toHex();\n    return getFollowingPrefix(me).concat(myFollowingHex);\n  }\n\n  export function getBalanceHistoryPrefix(me: string): string {\n    const meHex = ByteBuffer.fromUTF8(me).toHex();\n    return _KEYS.accountBalanceHistorySubstore.concat(meHex).concat(_KEYS.sep);\n  }\n\n  export function getBalanceHistoryKey(me: string, atWhen: string): string {\n    const atWhenHex = ByteBuffer.fromUTF8(atWhen).toHex();\n    return getBalanceHistoryPrefix(me).concat(atWhenHex);\n  }\n\n  // post related\n  export function getPostInfoKey(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postInfoSubStore.concat(postKeyHex);\n  }\n\n  export function getPostKey(author: string, postID: string): string {\n    return author.concat('#').concat(postID);\n  }\n\n  export function getPostMetaKey(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postMetaSubStore.concat(postKeyHex);\n  }\n\n  export function getPostLikePrefix(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postLikeSubStore.concat(postKeyHex).concat(_KEYS.sep);\n  }\n\n  export function getPostLikeKey(postKey: string, likeUser: string): string {\n    const likeUserHex = ByteBuffer.fromUTF8(likeUser).toHex();\n    return getPostLikePrefix(postKey).concat(likeUserHex);\n  }\n\n  export function getPostReportOrUpvotePrefix(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postReportOrUpvoteSubStore.concat(postKeyHex).concat(_KEYS.sep);\n  }\n\n  export function getPostReportOrUpvoteKey(postKey: string, user: string): string {\n    const userHex = ByteBuffer.fromUTF8(user).toHex();\n    return getPostReportOrUpvotePrefix(postKey).concat(userHex);\n  }\n\n  export function getPostViewPrefix(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postViewsSubStore.concat(postKeyHex).concat(_KEYS.sep);\n  }\n\n  export function getPostViewKey(postKey: string, viewUser: string): string {\n    const viewUserHex = ByteBuffer.fromUTF8(viewUser).toHex();\n    return getPostViewPrefix(postKey).concat(viewUserHex);\n  }\n\n  export function getPostCommentPrefix(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postCommentSubStore.concat(postKeyHex).concat(_KEYS.sep);\n  }\n\n  export function getPostCommentKey(postKey: string, commentPostKey: string): string {\n    const commentPostKeyHex = ByteBuffer.fromUTF8(commentPostKey).toHex();\n    return getPostCommentPrefix(postKey).concat(commentPostKeyHex);\n  }\n\n  export function getPostDonationPrefix(postKey: string): string {\n    const postKeyHex = ByteBuffer.fromUTF8(postKey).toHex();\n    return _KEYS.postDonationsSubStore.concat(postKeyHex).concat(_KEYS.sep);\n  }\n\n  export function getPostDonationKey(postKey: string, donateUser: string): string {\n    const donateUserHex = ByteBuffer.fromUTF8(donateUser).toHex();\n    return getPostDonationPrefix(postKey).concat(donateUserHex);\n  }\n\n  // proposal related\n  export function getProposalKey(proposalID: string): string {\n    const proposalIDHex = ByteBuffer.fromUTF8(proposalID).toHex();\n    return _KEYS.proposalSubstore.concat(proposalIDHex);\n  }\n\n  export function getProposalListKey(): string {\n    return _KEYS.proposalListSubStore;\n  }\n\n  // param related\n  export function getEvaluateOfContentValueParamKey(): string {\n    return _KEYS.evaluateOfContentValueParamSubStore;\n  }\n\n  export function getGlobalAllocationParamKey(): string {\n    return _KEYS.allocationParamSubStore;\n  }\n\n  export function getInfraInternalAllocationParamKey(): string {\n    return _KEYS.infraInternalAllocationParamSubStore;\n  }\n\n  export function getDeveloperParamKey(): string {\n    return _KEYS.developerParamSubStore;\n  }\n\n  export function getVoteParamKey(): string {\n    return _KEYS.voteParamSubStore;\n  }\n\n  export function getValidatorParamKey(): string {\n    return _KEYS.validatorParamSubStore;\n  }\n\n  export function getProposalParamKey(): string {\n    return _KEYS.proposalParamSubStore;\n  }\n\n  export function getCoinDayParamKey(): string {\n    return _KEYS.coinDayParamSubStore;\n  }\n\n  export function getBandwidthParamKey(): string {\n    return _KEYS.bandwidthParamSubStore;\n  }\n\n  export function getAccountParamKey(): string {\n    return _KEYS.accountParamSubstore;\n  }\n}\n\nexport default Keys;\n","import ByteBuffer from 'bytebuffer';\nimport * as Types from '../common';\nimport { ITransport } from '../transport';\nimport { InternalPubKey, StdTx, convertToRawPubKey, encodePubKey } from '../transport/encoder';\nimport { ResultBlock } from '../transport/rpc';\nimport * as Util from '../util/index';\nimport Keys from './keys';\n\nexport default class Query {\n  private _transport: ITransport;\n\n  constructor(transport: ITransport) {\n    this._transport = transport;\n  }\n\n  doesUsernameMatchPrivKey(username: string, privKeyHex: string): Promise<boolean> {\n    return this.getAccountInfo(username).then(info => {\n      if (info == null) {\n        return false;\n      }\n      return Util.isKeyMatch(privKeyHex, info.master_key);\n    });\n  }\n  // validator related query\n  getAllValidators(): Promise<AllValidators> {\n    const ValidatorKVStoreKey = Keys.KVSTOREKEYS.ValidatorKVStoreKey;\n    return this._transport.query<AllValidators>(Keys.getValidatorListKey(), ValidatorKVStoreKey);\n  }\n\n  getValidator(username: string): Promise<Validator> {\n    const ValidatorKVStoreKey = Keys.KVSTOREKEYS.ValidatorKVStoreKey;\n    return this._transport.query<Validator>(Keys.getValidatorKey(username), ValidatorKVStoreKey);\n  }\n\n  // account related query\n  getSeqNumber(username: string): Promise<number> {\n    return this.getAccountMeta(username).then(meta => {\n      return meta.sequence;\n    });\n  }\n\n  getAllBalanceHistory(username: string): Promise<BalanceHistory> {\n    return this.getAccountBank(username).then(bank => {\n      let numberOfbundle = bank.number_of_transaction / 100;\n      let promises: Promise<BalanceHistory>[] = [];\n      for (var i = 0; i <= numberOfbundle; ++i) {\n        promises.push(this.getBalanceHistoryBundle(username, i));\n      }\n      let res = <BalanceHistory>{ details: [] };\n      return Promise.all(promises).then(bundles => {\n        bundles.reduce((prev, curr) => {\n          prev.details.push(...curr.details);\n          return prev;\n        }, res);\n        return res;\n      });\n    });\n  }\n\n  getBalanceHistoryBundle(username: string, index: number): Promise<BalanceHistory> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<BalanceHistory>(\n      Keys.getBalanceHistoryKey(username, index.toString()),\n      AccountKVStoreKey\n    );\n  }\n\n  getAccountMeta(username: string): Promise<AccountMeta> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<AccountMeta>(Keys.getAccountMetaKey(username), AccountKVStoreKey);\n  }\n\n  getAccountBank(username: string): Promise<AccountBank> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<AccountBank>(Keys.getAccountBankKey(username), AccountKVStoreKey);\n  }\n\n  getAccountInfo(username: string): Promise<AccountInfo> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport\n      .query<AccountInfoInternal>(Keys.getAccountInfoKey(username), AccountKVStoreKey)\n      .then(info => {\n        const res: AccountInfo = {\n          username: info.username,\n          created_at: info.created_at,\n          master_key: encodePubKey(convertToRawPubKey(info.master_key)),\n          transaction_key: encodePubKey(convertToRawPubKey(info.transaction_key)),\n          post_key: encodePubKey(convertToRawPubKey(info.post_key))\n        };\n        return res;\n      });\n  }\n\n  getGrantList(username: string): Promise<GrantKeyList> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport\n      .query<GrantKeyListInternal>(Keys.getGrantKeyListKey(username), AccountKVStoreKey)\n      .then(result => {\n        var newList: GrantPubKey[] = new Array(result.grant_public_key_list.length);\n        for (var i = 0; i < result.grant_public_key_list.length; i++) {\n          newList[i].expires_at = result.grant_public_key_list[i].expires_at;\n          newList[i].username = result.grant_public_key_list[i].username;\n          newList[i].public_key = encodePubKey(\n            convertToRawPubKey(result.grant_public_key_list[i].public_key)\n          );\n        }\n        var newResult: GrantKeyList = {\n          grant_public_key_list: newList\n        };\n        return newResult;\n      });\n  }\n\n  getReward(username: string): Promise<Reward> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<Reward>(Keys.getRewardKey(username), AccountKVStoreKey);\n  }\n\n  getRelationship(me: string, other: string): Promise<Relationship> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<Relationship>(\n      Keys.getRelationshipKey(me, other),\n      AccountKVStoreKey\n    );\n  }\n\n  getFollowerMeta(me: string, myFollower: string): Promise<FollowerMeta> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<FollowerMeta>(\n      Keys.getFollowerKey(me, myFollower),\n      AccountKVStoreKey\n    );\n  }\n\n  getFollowingMeta(me: string, myFollowing: string): Promise<FollowingMeta> {\n    const AccountKVStoreKey = Keys.KVSTOREKEYS.AccountKVStoreKey;\n    return this._transport.query<FollowingMeta>(\n      Keys.getFollowingKey(me, myFollowing),\n      AccountKVStoreKey\n    );\n  }\n\n  // post related query\n  getPostComment(author: string, postID: string, commentPostKey: string): Promise<Comment> {\n    const PostKVStoreKey = Keys.KVSTOREKEYS.PostKVStoreKey;\n    const PostKey = Keys.getPostKey(author, postID);\n    return this._transport.query<Comment>(\n      Keys.getPostCommentKey(PostKey, commentPostKey),\n      PostKVStoreKey\n    );\n  }\n\n  getPostView(author: string, postID: string, viewUser: string): Promise<View> {\n    const PostKVStoreKey = Keys.KVSTOREKEYS.PostKVStoreKey;\n    const PostKey = Keys.getPostKey(author, postID);\n    return this._transport.query<View>(Keys.getPostViewKey(PostKey, viewUser), PostKVStoreKey);\n  }\n\n  getPostDonation(author: string, postID: string, donateUser: string): Promise<Donation> {\n    const PostKVStoreKey = Keys.KVSTOREKEYS.PostKVStoreKey;\n    const PostKey = Keys.getPostKey(author, postID);\n    return this._transport.query<Donation>(\n      Keys.getPostDonationKey(PostKey, donateUser),\n      PostKVStoreKey\n    );\n  }\n\n  getPostReportOrUpvote(author: string, postID: string, user: string): Promise<ReportOrUpvote> {\n    const PostKVStoreKey = Keys.KVSTOREKEYS.PostKVStoreKey;\n    const PostKey = Keys.getPostKey(author, postID);\n    return this._transport.query<ReportOrUpvote>(\n      Keys.getPostCommentKey(PostKey, user),\n      PostKVStoreKey\n    );\n  }\n\n  getPostInfo(author: string, postID: string): Promise<PostInfo> {\n    const PostKVStoreKey = Keys.KVSTOREKEYS.PostKVStoreKey;\n    const PostKey = Keys.getPostKey(author, postID);\n    return this._transport.query<PostInfo>(Keys.getPostInfoKey(PostKey), PostKVStoreKey);\n  }\n\n  getPostMeta(author: string, postID: string): Promise<PostMeta> {\n    const PostKVStoreKey = Keys.KVSTOREKEYS.PostKVStoreKey;\n    const PostKey = Keys.getPostKey(author, postID);\n    return this._transport.query<PostMeta>(Keys.getPostMetaKey(PostKey), PostKVStoreKey);\n  }\n\n  // vote related query\n  getDelegation(voter: string, delegator: string): Promise<Delegation> {\n    const VoteKVStoreKey = Keys.KVSTOREKEYS.VoteKVStoreKey;\n    return this._transport.query<Delegation>(\n      Keys.getDelegationKey(voter, delegator),\n      VoteKVStoreKey\n    );\n  }\n\n  getVoter(voterName: string): Promise<Voter> {\n    const VoteKVStoreKey = Keys.KVSTOREKEYS.VoteKVStoreKey;\n    return this._transport.query<Voter>(Keys.getVoterKey(voterName), VoteKVStoreKey);\n  }\n\n  // developer related query\n  getDeveloper(developerName: string): Promise<Developer> {\n    const DeveloperKVStoreKey = Keys.KVSTOREKEYS.DeveloperKVStoreKey;\n    return this._transport.query<Developer>(\n      Keys.getDeveloperKey(developerName),\n      DeveloperKVStoreKey\n    );\n  }\n\n  getDevelopers(): Promise<DeveloperList> {\n    const DeveloperKVStoreKey = Keys.KVSTOREKEYS.DeveloperKVStoreKey;\n    return this._transport.query<DeveloperList>(Keys.getDeveloperListKey(), DeveloperKVStoreKey);\n  }\n\n  // infra related query\n  getInfraProvider(providerName: string): Promise<InfraProvider> {\n    const InfraKVStoreKey = Keys.KVSTOREKEYS.InfraKVStoreKey;\n    return this._transport.query<InfraProvider>(\n      Keys.getInfraProviderKey(providerName),\n      InfraKVStoreKey\n    );\n  }\n\n  getInfraProviders(): Promise<InfraProviderList> {\n    const InfraKVStoreKey = Keys.KVSTOREKEYS.InfraKVStoreKey;\n    return this._transport.query<InfraProviderList>(\n      Keys.getInfraProviderListKey(),\n      InfraKVStoreKey\n    );\n  }\n\n  // proposal related query\n  getProposalList(): Promise<ProposalList> {\n    const ProposalKVStoreKey = Keys.KVSTOREKEYS.ProposalKVStoreKey;\n    return this._transport.query<ProposalList>(Keys.getProposalListKey(), ProposalKVStoreKey);\n  }\n\n  getProposal(proposalID: string): Promise<Proposal> {\n    const ProposalKVStoreKey = Keys.KVSTOREKEYS.ProposalKVStoreKey;\n    return this._transport.query<Proposal>(Keys.getProposalKey(proposalID), ProposalKVStoreKey);\n  }\n\n  getOngoingProposal(): Promise<Proposal[]> {\n    return this.getProposalList().then(list =>\n      Promise.all((list.ongoing_proposal || []).map(p => this.getProposal(p)))\n    );\n  }\n\n  getExpiredProposal(): Promise<Proposal[]> {\n    return this.getProposalList().then(list =>\n      Promise.all((list.past_proposal || []).map(p => this.getProposal(p)))\n    );\n  }\n\n  // param related query\n  getEvaluateOfContentValueParam(): Promise<Types.EvaluateOfContentValueParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.EvaluateOfContentValueParam>(\n      Keys.getEvaluateOfContentValueParamKey(),\n      ParamKVStoreKey\n    );\n  }\n\n  getGlobalAllocationParam(): Promise<Types.GlobalAllocationParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.GlobalAllocationParam>(\n      Keys.getGlobalAllocationParamKey(),\n      ParamKVStoreKey\n    );\n  }\n\n  getInfraInternalAllocationParam(): Promise<Types.InfraInternalAllocationParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.InfraInternalAllocationParam>(\n      Keys.getInfraInternalAllocationParamKey(),\n      ParamKVStoreKey\n    );\n  }\n\n  getDeveloperParam(): Promise<Types.DeveloperParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.DeveloperParam>(\n      Keys.getDeveloperParamKey(),\n      ParamKVStoreKey\n    );\n  }\n\n  getVoteParam(): Promise<Types.VoteParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.VoteParam>(Keys.getVoteParamKey(), ParamKVStoreKey);\n  }\n\n  getProposalParam(): Promise<Types.ProposalParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.ProposalParam>(Keys.getProposalParamKey(), ParamKVStoreKey);\n  }\n\n  getValidatorParam(): Promise<Types.ValidatorParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.ValidatorParam>(\n      Keys.getValidatorParamKey(),\n      ParamKVStoreKey\n    );\n  }\n\n  getCoinDayParam(): Promise<Types.CoinDayParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.CoinDayParam>(Keys.getCoinDayParamKey(), ParamKVStoreKey);\n  }\n\n  getBandwidthParam(): Promise<Types.BandwidthParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.BandwidthParam>(\n      Keys.getBandwidthParamKey(),\n      ParamKVStoreKey\n    );\n  }\n\n  getAccountParam(): Promise<Types.AccountParam> {\n    const ParamKVStoreKey = Keys.KVSTOREKEYS.ParamKVStoreKey;\n    return this._transport.query<Types.AccountParam>(Keys.getAccountParamKey(), ParamKVStoreKey);\n  }\n\n  // block related\n  getBlock(height: number): Promise<ResultBlock> {\n    return this._transport.block(height);\n  }\n\n  getTxsInBlock(height: number): Promise<StdTx[]> {\n    return this._transport\n      .block(height)\n      .then(\n        v =>\n          v && v.block && v.block.data && v.block.data.txs\n            ? v.block.data.txs.map(tx => JSON.parse(ByteBuffer.atob(tx)))\n            : []\n      );\n  }\n}\n\n// validator related struct\nexport interface AllValidators {\n  oncall_validators: string[];\n  all_validators: string[];\n  pre_block_validators: string[];\n  lowest_power: Types.Coin;\n  lowest_validator: string;\n}\n\nexport interface ABCIValidator {\n  pub_key: string;\n  power: number;\n}\n\nexport interface Validator {\n  abci: ABCIValidator;\n  username: string;\n  deposit: Types.Coin;\n  absent_commit: number;\n  produced_blocks: number;\n  link: string;\n}\n\n// vote related struct\nexport interface Voter {\n  username: string;\n  deposit: Types.Coin;\n  delegated_power: Types.Coin;\n}\n\nexport interface Vote {\n  voter: string;\n  result: boolean;\n}\n\nexport interface Delegation {\n  delegator: string;\n  amount: Types.Coin;\n}\n\n// post related\nexport interface Comment {\n  author: string;\n  post_key: string;\n  created: number;\n}\n\nexport interface View {\n  username: string;\n  created: number;\n  times: number;\n}\n\nexport interface Like {\n  username: string;\n  weight: number;\n  created: number;\n}\n\nexport interface Donation {\n  amount: Types.Coin;\n  created: number;\n}\n\nexport interface ReportOrUpvote {\n  username: string;\n  stake: Types.Coin;\n  created: number;\n  is_report: boolean;\n}\n\nexport interface PostInfo {\n  post_id: string;\n  title: string;\n  content: string;\n  author: string;\n  parent_author: string;\n  parent_postID: string;\n  source_author: string;\n  source_postID: string;\n  links: Types.IDToURLMapping[];\n}\n\nexport interface PostMeta {\n  created: number;\n  last_update: number;\n  last_activity: number;\n  allow_replies: boolean;\n  total_like_count: number;\n  total_donate_count: number;\n  total_like_weight: number;\n  total_dislike_weight: number;\n  total_report_stake: Types.Coin;\n  total_upvote_stake: Types.Coin;\n  reward: Types.Coin;\n  is_deleted: boolean;\n  redistribution_split_rate: Types.Rat;\n}\n\n// developer related\nexport interface Developer {\n  username: string;\n  deposit: Types.Coin;\n  app_consumption: Types.Coin;\n}\n\nexport interface DeveloperList {\n  all_developers: string[];\n}\n\n// infra provider related\nexport interface InfraProvider {\n  username: string;\n  usage: number;\n}\n\nexport interface InfraProviderList {\n  all_infra_providers: string[];\n}\n\n// account related\nexport interface BalanceHistory {\n  details: Detail[];\n}\n\nexport interface Detail {\n  detail: number;\n  amount: Types.Coin;\n  created_at: number;\n}\n\nexport interface AccountMeta {\n  sequence: number;\n  last_activity: number;\n  transaction_capacity: Types.Coin;\n  json_meta: string;\n}\n\nexport interface AccountInfo {\n  username: string;\n  created_at: number;\n  master_key: string;\n  transaction_key: string;\n  post_key: string;\n}\n\nexport interface AccountBank {\n  saving: Types.Coin;\n  stake: Types.Coin;\n  frozen_money_list: FrozenMoney[];\n  number_of_transaction: number;\n}\n\nexport interface FrozenMoney {\n  amount: Types.Coin;\n  start_at: number;\n  times: number;\n  interval: number;\n}\n\nexport interface GrantKeyList {\n  grant_public_key_list: GrantPubKey[];\n}\n\nexport interface GrantPubKey {\n  username: string;\n  public_key: string;\n  expires_at: number;\n}\n\nexport interface Reward {\n  original_income: Types.Coin;\n  friction_income: Types.Coin;\n  actual_reward: Types.Coin;\n  unclaim_reward: Types.Coin;\n}\n\nexport interface Relationship {\n  donation_times: number;\n}\n\nexport interface FollowerMeta {\n  created_at: number;\n  follower_name: string;\n}\n\nexport interface FollowingMeta {\n  created_at: number;\n  following_name: string;\n}\n\n// proposal related\nexport interface ProposalList {\n  ongoing_proposal?: string[];\n  past_proposal?: string[];\n}\n\nexport interface ProposalInfo {\n  creator: string;\n  proposal_id: string;\n  agree_vote: Types.Coin;\n  disagree_vote: Types.Coin;\n  result: number;\n}\n\nexport interface Proposal {\n  type: string;\n  value: ProposalValue;\n}\n\nexport interface ProposalValue {\n  ProposalInfo: ProposalInfo;\n  [propName: string]: any;\n}\n\nexport interface ChangeParamProposalValue extends ProposalValue {\n  param: Types.Parameter;\n}\n\nexport interface ContentCensorshipProposalValue extends ProposalValue {\n  perm_link: string;\n}\n\nexport interface ProtocolUpgradeProposalValue extends ProposalValue {\n  link: string;\n}\n\n// tx detail type\nexport const DETAILTYPE = {\n  // Different possible incomes\n  TransferIn: 0,\n  DonationIn: 1,\n  ClaimReward: 2,\n  ValidatorInflation: 3,\n  DeveloperInflation: 4,\n  InfraInflation: 5,\n  VoteReturnCoin: 6,\n  DelegationReturnCoin: 7,\n  ValidatorReturnCoin: 8,\n  DeveloperReturnCoin: 9,\n  InfraReturnCoin: 10,\n  ProposalReturnCoin: 11,\n  GenesisCoin: 12,\n  // Different possible outcomes\n  TransferOut: 13,\n  DonationOut: 14,\n  Delegate: 15,\n  VoterDeposit: 16,\n  ValidatorDeposit: 17,\n  DeveloperDeposit: 18,\n  InfraDeposit: 19,\n  ProposalDeposit: 20\n};\n\nconst _TIMECONST = {\n  HoursPerYear: 8766,\n  MinutesPerYear: 8766 * 60,\n  MinutesPerMonth: (8766 * 60) / 12,\n  BalanceHistoryIntervalTime: ((8766 * 60) / 12) * 60\n};\n\n// internally used\ninterface GrantKeyListInternal {\n  grant_public_key_list: GrantPubKeyInternal[];\n}\n\ninterface GrantPubKeyInternal {\n  username: string;\n  public_key: InternalPubKey;\n  expires_at: number;\n}\n\ninterface AccountInfoInternal {\n  username: string;\n  created_at: number;\n  master_key: InternalPubKey;\n  transaction_key: InternalPubKey;\n  post_key: InternalPubKey;\n}\n","//@ts-ignore\nimport ByteBuffer from 'bytebuffer';\nimport fetch from 'cross-fetch';\nimport * as JsonRpc2 from './jsonrpc2';\n\nexport interface IResultABCIQuery {\n  response: IResponseQuery;\n}\n\nexport interface IResponseQuery {\n  code: number;\n  log: string;\n  info: string;\n  index: number;\n  key: string;\n  value: any;\n  proof: string;\n  height: number;\n}\n\nexport interface ResultBroadcastTxCommit {\n  check_tx: any;\n  deliver_tx: any;\n  hash: any;\n  height: number;\n}\n\nexport interface ResultBlock {\n  block: Block;\n  block_meta: BlockMeta;\n}\n\nexport interface Block {\n  data: Data;\n}\n\nexport interface BlockMeta {}\n\nexport interface Data {\n  txs: string[];\n}\n\nconst DefaultABCIQueryOptions = {\n  height: 0,\n  trusted: false\n};\n\nexport class Rpc {\n  private _nodeUrl: string;\n\n  constructor(nodeUrl: string) {\n    this._nodeUrl = nodeUrl;\n  }\n\n  abciQuery(path: string, key: string, opts = DefaultABCIQueryOptions): Promise<IResultABCIQuery> {\n    return fetch(this._nodeUrl, {\n      headers: { 'Content-Type': 'text/json' },\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        id: 'jsonrpc-client',\n        method: 'abci_query',\n        params: {\n          ...opts,\n          path,\n          data: key\n        }\n      }),\n      method: 'POST',\n      mode: 'cors'\n    })\n      .then((response: any) => response.json())\n      .then(\n        (\n          data:\n            | JsonRpc2.JsonRpcSuccess<IResultABCIQuery>\n            | JsonRpc2.JsonRpcFailure<IResultABCIQuery>\n        ) => {\n          if ('result' in data) {\n            return data.result as IResultABCIQuery;\n          } else {\n            throw data.error;\n          }\n        }\n      );\n  }\n\n  broadcastTxCommit(tx: string): Promise<ResultBroadcastTxCommit> {\n    return fetch(this._nodeUrl, {\n      headers: { 'Content-Type': 'text/json' },\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        id: 'jsonrpc-client',\n        method: 'broadcast_tx_commit',\n        params: {\n          tx: tx\n        }\n      }),\n      method: 'POST',\n      mode: 'cors'\n    })\n      .then((response: any) => response.json())\n      .then(\n        (\n          data:\n            | JsonRpc2.JsonRpcSuccess<ResultBroadcastTxCommit>\n            | JsonRpc2.JsonRpcFailure<ResultBroadcastTxCommit>\n        ) => {\n          if ('result' in data) {\n            return data.result as ResultBroadcastTxCommit;\n          } else {\n            throw data.error;\n          }\n        }\n      );\n  }\n\n  block(height: number): Promise<ResultBlock> {\n    return fetch(this._nodeUrl, {\n      headers: { 'Content-Type': 'text/json' },\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        id: 'jsonrpc-client',\n        method: 'block',\n        params: {\n          height: height\n        }\n      }),\n      method: 'POST',\n      mode: 'cors'\n    })\n      .then((response: any) => response.json())\n      .then((data: JsonRpc2.JsonRpcSuccess<ResultBlock> | JsonRpc2.JsonRpcFailure<ResultBlock>) => {\n        if ('result' in data) {\n          return data.result as ResultBlock;\n        } else {\n          throw data.error;\n        }\n      });\n  }\n}\n","import ByteBuffer from 'bytebuffer';\nimport { ec as EC } from 'elliptic';\nimport { decodePrivKey, encodeSignMsg, encodeTx } from './encoder';\nimport { ResultBlock, ResultBroadcastTxCommit, Rpc } from './rpc';\n\nexport interface ITransport {\n  query<T = any>(key: string, storeName: string): Promise<T>;\n  block(height: number): Promise<ResultBlock>;\n  signBuildBroadcast(\n    msg: any,\n    msgType: string,\n    privKeyHex: string,\n    seq: number\n  ): Promise<ResultBroadcastTxCommit>;\n}\n\nexport interface ITransportOptions {\n  nodeUrl: string;\n  chainId?: string;\n}\n\nexport class Transport implements ITransport {\n  // This will be hard coded later\n  private _chainId: string;\n  private _rpc: Rpc;\n\n  constructor(opt: ITransportOptions) {\n    this._rpc = new Rpc(opt.nodeUrl); // create with nodeUrl\n    this._chainId = opt.chainId || 'test-chain-i21cJ7';\n  }\n\n  query<T>(key: string, storeName: string): Promise<T> {\n    // transport: get path and key for ABCIQuery and return result\n    // get transport's node and do ABCIQuery\n    // rpc client do rpc call\n    // check resp\n    const path = `/${storeName}/key`;\n    return this._rpc.abciQuery(path, key).then(result => {\n      if (!result.response || !result.response.value) {\n        throw new Error('Query failed: Empty result');\n      }\n\n      const jsonStr = ByteBuffer.atob(result.response.value);\n      return JSON.parse(jsonStr) as T;\n    });\n  }\n\n  block(height: number): Promise<ResultBlock> {\n    return this._rpc.block(height).then(result => {\n      return result as ResultBlock;\n    });\n  }\n\n  // Does the private key decoding from hex, sign message,\n  // build transaction to broadcast\n  signBuildBroadcast(\n    msg: any,\n    msgType: string,\n    privKeyHex: string,\n    seq: number\n  ): Promise<ResultBroadcastTxCommit> {\n    // private key from hex\n    var ec = new EC('secp256k1');\n    var key = ec.keyFromPrivate(decodePrivKey(privKeyHex), 'hex');\n    // signmsg\n    const signMsgHash = encodeSignMsg(msg, this._chainId, seq);\n    // sign to get signature\n    const sig = key.sign(signMsgHash, { canonical: true });\n    const sigDERHex = sig.toDER('hex');\n    // build tx\n    const tx = encodeTx(msg, msgType, key.getPublic(true, 'hex'), sigDERHex, seq);\n\n    // return broadcast\n    return this._rpc.broadcastTxCommit(tx).then(result => {\n      if (result.check_tx.code !== undefined) {\n        throw new BroadcastError(\n          BroadCastErrorEnum.CheckTx,\n          result.check_tx.log,\n          result.check_tx.code\n        );\n      } else if (result.deliver_tx.code !== undefined) {\n        throw new BroadcastError(\n          BroadCastErrorEnum.DeliverTx,\n          result.deliver_tx.log,\n          result.deliver_tx.code\n        );\n      }\n      return result;\n    });\n  }\n}\n\nexport enum BroadCastErrorEnum {\n  CheckTx,\n  DeliverTx\n}\n\n// How to extend Error in TS2.1+:\n// https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\nexport class BroadcastError extends Error {\n  readonly code: number;\n  readonly type: BroadCastErrorEnum;\n\n  constructor(type: BroadCastErrorEnum, log: string, code: number) {\n    super(log);\n    Object.setPrototypeOf(this, BroadcastError.prototype);\n    this.type = type;\n    this.code = code;\n  }\n}\n","import Broadcast from './broadcast';\nimport Query from './query';\nimport { ITransport, ITransportOptions, Transport } from './transport';\n\nexport class LINO {\n  private _options: any;\n  private _transport: ITransport;\n  private _query: Query;\n  private _broadcast: Broadcast;\n\n  constructor(opt: ITransportOptions) {\n    this._options = opt;\n    this._transport = new Transport(opt);\n    this._query = new Query(this._transport);\n    this._broadcast = new Broadcast(this._transport);\n  }\n\n  get query(): Query {\n    return this._query;\n  }\n\n  get broadcast(): Broadcast {\n    return this._broadcast;\n  }\n}\n"],"names":["ec","EC","Util.isKeyMatch","Keys"],"mappings":"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"}